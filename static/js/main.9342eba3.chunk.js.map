{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","Component","TodosList","todos","map","key","Header","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","ToDoContainer","uuidv4","copmleted","handleChange","delTodo","filter","addTotoItem","newTodo","React","ReactDOM","render","TodoContainer","document","getElementById"],"mappings":"4NAgCeA,E,uKA1BD,IAAD,SAS4BC,KAAKC,MAAMC,KAApCC,EATH,EASGA,UAAWC,EATd,EAScA,GAAIC,EATlB,EASkBA,MAEvB,OAAQ,wBAAIC,UAAU,aAClB,2BAAOC,KAAK,WAChBC,QAASL,EACTM,SAAU,kBAAM,EAAKR,MAAMS,kBAAkBN,MAE5C,4BAAQO,QAAS,kBAClB,EAAKV,MAAMW,gBAAgBR,KAD1B,UAGF,0BAAMS,MAAOV,EAjBW,CACnBW,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAaqB,MACxCZ,Q,GAvBca,aCkBRC,E,uKAjBD,IAAD,OACL,OAEI,6BACKnB,KAAKC,MAAMmB,MAAMC,KAAI,SAAAnB,GAAI,OACvB,kBAAC,EAAD,CACAoB,IAAKpB,EAAKE,GACVF,KAAMA,EACNQ,kBAAmB,EAAKT,MAAMS,kBAC7BE,gBAAiB,EAAKX,MAAMW,0B,GAVvBM,aCkBVK,EAnBA,WAOX,OACI,4BAAQV,MANG,CACfW,QAAS,SACTC,WAAY,QAKJ,wBAAIZ,MAAO,CAACa,SAAU,OAAQC,aAAc,SAA5C,mBAGA,uBAAGd,MAAO,CAACa,SAAU,SAArB,uD,OC2BGE,E,4MArCfC,MAAQ,CACJxB,MAAO,I,EAKXI,SAAW,SAAAqB,GACP,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlCC,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKnC,MAAMoC,aAAa,EAAKR,MAAMxB,OACnC,EAAK0B,SAAS,CACV1B,MAAO,M,uDAKP,OACI,0BAAMiC,SAAUtC,KAAKmC,aAAc7B,UAAU,kBACzC,2BACAC,KAAK,OACLgC,YAAY,cACZL,MAAOlC,KAAK6B,MAAMxB,MAClB4B,KAAK,QACLxB,SAAUT,KAAKS,WAEf,2BAAOF,KAAK,SAASD,UAAU,eAAe4B,MAAM,gB,GAhC5ChB,a,QCoFTsB,E,4MA3EXX,MAAQ,CACJT,MAAO,CACH,CACIhB,GAAIqC,cACJpC,MAAO,gCACPF,WAAW,GAEf,CACIC,GAAIqC,cACJpC,MAAO,kCACPqC,WAAW,GAEf,CACItC,GAAIqC,cACJpC,MAAO,wBACPF,WAAW,K,EAMvBwC,aAAe,SAAAvC,GACX,EAAK2B,SAAS,CAGVX,MAAO,EAAKS,MAAMT,MAAMC,KAAI,SAAAnB,GAIxB,OAHIA,EAAKE,KAAOA,IACZF,EAAKC,WAAaD,EAAKC,WAEpBD,Q,EAKnB0C,QAAU,SAAAxC,GACN,EAAK2B,SAAS,CAGVX,MAAM,YACC,EAAKS,MAAMT,MAAMyB,QAAO,SAAA3C,GACvB,OAAOA,EAAKE,KAAOA,S,EAMnC0C,YAAc,SAAAzC,GACV,IAAM0C,EAAU,CACZ3C,GAAIqC,cACJpC,MAAOA,EACPF,WAAW,GAEf,EAAK4B,SAAS,CACVX,MAAM,GAAD,mBAAM,EAAKS,MAAMT,OAAjB,CAAwB2B,O,uDAKjC,OAEI,yBAAKzC,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAW+B,aAAcrC,KAAK8C,cAC9B,kBAAC,EAAD,CACA1B,MAAOpB,KAAK6B,MAAMT,MAClBV,kBAAmBV,KAAK2C,aACxB/B,gBAAiBZ,KAAK4C,e,GAtEVI,IAAM9B,W,MCDlC+B,IAASC,OAAO,kBAACC,EAAD,MAAmBC,SAASC,eAAe,U","file":"static/js/main.9342eba3.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n\nclass TodoItem extends Component {\n\n    \n    render() {\n     \n        const completedStyle = {\n            fontStyle: \"italic\",\n            color: \"#d35e0f\",\n            opacity: 0.4,\n            textDecoration: \"line-through\",\n        }\n\n        const { completed, id, title } = this.props.todo\n\n        return  <li className=\"todo-item\"> \n            <input type=\"checkbox\" \n        checked={completed}\n        onChange={() => this.props.handleChangeProps(id)}\n        />\n         <button onClick={() =>\n        this.props.deleteTodoProps(id)}>Delete</button>\n       \n       <span style={completed ? completedStyle : null}>\n        {title}\n        </span>\n        </li>\n    }\n}\n\nexport default TodoItem\n","import React, { Component } from 'react'\nimport TodoItem from './TodoItem'\n\n class TodosList extends Component {\n    render() {\n        return (\n            //access data through props from TodoContainer\n            <div>\n                {this.props.todos.map(todo => (\n                   <TodoItem \n                   key={todo.id} \n                   todo={todo}\n                   handleChangeProps={this.props.handleChangeProps}\n                    deleteTodoProps={this.props.deleteTodoProps}\n                    />\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default TodosList\n","import React from 'react'\n\nconst Header = () => {\n\nconst headerStyle= {\n    padding: \"20px 0\",\n    lineHeight: \"23m\",\n}\n\n    return (\n        <header style={headerStyle}>\n            <h1 style={{fontSize: \"25px\", marginBottom: \"15px\"}}>\n                Simple Todo App\n                </h1>\n            <p style={{fontSize: \"19px\"}}>\n                Please add to-dos item(s) through the input field\n                </p>\n        </header>\n    )\n}\n\nexport default Header","import React, { Component } from 'react'\n\nclass InputTodo extends Component {\n//make a controlled component and make controlled by compoonent state rather than the DOM\nstate = {\n    title: \"\"\n};\n\n//type anything in the input field, event handler will trigger\n//then calls onChange() class method and will rerender the state using setState method to the title \nonChange = e => {\n    this.setState({\n        [e.target.name]: e.target.value\n    });\n};\n\nhandleSubmit = e => {\n    e.preventDefault();\n    this.props.addTodoProps(this.state.title);\n    this.setState({\n        title: \"\"\n    });\n};\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\n                <input \n                type=\"text\" \n                placeholder=\"Add todo...\"\n                value={this.state.title}\n                name=\"title\"\n                onChange={this.onChange}\n                />\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\"\n            />\n            </form>\n        )\n    }\n}\n\nexport default InputTodo\n","import React from \"react\"\nimport TodosList from \"./TodosList\"\nimport Header from \"./Header\"\nimport InputTodo from \"./InputTodo\"\nimport { v4 as uuidv4 } from \"uuid\"\n\n\nclass ToDoContainer extends React.Component {\n\n    //states, array of objects\n    //defined todos in the state object\n    state = {\n        todos: [\n            {\n                id: uuidv4(),\n                title: \"Setup development environment\",\n                completed: true\n            },\n            {\n                id: uuidv4(),\n                title: \"Develop website and add content\",\n                copmleted: false\n            },\n            {\n                id: uuidv4(),\n                title: \"Deploy to live server\",\n                completed: false\n            }\n        ]\n    };\n//acccessed toodos in the render method\n//looped through the array of objects, and output each title\n    handleChange = id => {\n        this.setState({\n            //loop through todos data and check if any items\n            // id matches the checked id, then flip the completed value\n            todos: this.state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            })\n        })\n    };\n\n    delTodo = id => {\n        this.setState({\n            //for each of the todos data we are looping through\n            //we want to retain the ones whos id is not equal to the id passed in\n            todos: [\n                ...this.state.todos.filter(todo => {\n                    return todo.id !== id;\n                })\n            ]\n        })\n    };\n\n    addTotoItem = title => {\n        const newTodo = {\n            id: uuidv4(),\n            title: title,\n            completed: false\n        };\n        this.setState({\n            todos: [...this.state.todos, newTodo]\n        });\n    };\n\n    render() {\n        return (\n            //now have the state data in todos prop\n            <div className=\"container\">\n                <Header/>\n                <InputTodo addTodoProps={this.addTotoItem}/>\n                <TodosList \n                todos={this.state.todos}\n                handleChangeProps={this.handleChange}\n                deleteTodoProps={this.delTodo}\n                \n                />\n                \n            </div>\n        )\n    }\n}\n\nexport default ToDoContainer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TodoContainer from './components/TodoContainer'\nimport \"./App.css\"\n\nconst element = <h1>Hell from create react app</h1>\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}